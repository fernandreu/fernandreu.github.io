{"version":3,"sources":["webpack:///./src/pages/projects.jsx"],"names":["Projects","edges","data","allMarkdownRemark","title","map","node","key","id","cover","frontmatter","childImageSharp","fluid","path","date","tags","excerpt","query"],"mappings":"2LA8BeA,UAvBE,SAAC,GAAc,IACtBC,EADqB,EAAXC,KACKC,kBAAfF,MACR,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAQG,MAAO,sBACf,YAAC,IAAD,CAAQA,MAAM,qBAAd,8CAGCH,EAAMI,IAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,YAAC,IAAD,CACEC,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,YAAYD,MAAME,gBAAgBC,MAC9CC,KAAMP,EAAKI,YAAYG,KACvBT,MAAOE,EAAKI,YAAYN,MACxBU,KAAMR,EAAKI,YAAYI,KACvBC,KAAMT,EAAKI,YAAYK,KACvBC,QAASV,EAAKU,cA8BjB,IAAMC,EAAK","file":"component---src-pages-projects-jsx-7074b4183ef0b23ac5a2.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { Header, BlogList } from '../components';\nimport { Layout } from '../layouts';\n\nconst Projects = ({ data }) => {\n  const { edges } = data.allMarkdownRemark;\n  return (\n    <Layout>\n      <Helmet title={'Personal Projects'} />\n      <Header title=\"Personal Projects\">\n        Software Developer &ndash; Aeronautical Engineer\n      </Header>\n      {edges.map(({ node }) => (\n        <BlogList\n          key={node.id}\n          cover={node.frontmatter.cover.childImageSharp.fluid}\n          path={node.frontmatter.path}\n          title={node.frontmatter.title}\n          date={node.frontmatter.date}\n          tags={node.frontmatter.tags}\n          excerpt={node.excerpt}\n        />\n      ))}\n    </Layout>\n  );\n};\n\nexport default Projects;\n\nProjects.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            frontmatter: PropTypes.shape({\n              cover: PropTypes.object.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              tags: PropTypes.array,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 200)\n          frontmatter {\n            title\n            path\n            tags\n            date(formatString: \"YYYY\")\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 1000\n                  quality: 90\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}